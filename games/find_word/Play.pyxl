Play
════════════════════════════════════════════════════════════════════════

todo("New word achievements after level 2")


enter
────────────────────────────────────────────────────────────────────────
assert(not in_waiting_room)

if not in_waiting_room: play_sound(start_sound)
    
last_countdown_sound_time = now()
start_time = frame_utc_now

// Compute end_time
if game_type == SOLO:
    end_time = frame_utc_now + SOLO_GAME_TIME
else:
    assert(game_type == GLOBAL)
    
    end_time = prev_global_game_utc_start_time() + GLOBAL_GAME_TIME

    assert(end_time > frame_utc_now + GLOBAL_JOIN_MIN_REMAINING_TIME - 1 or DEBUG_INTERMISSION,
        "The game should not end so soon")

set_background(
    if game_type == GLOBAL 
    then GLOBAL_BACKGROUND_COLOR
    else SOLO_BACKGROUND_COLOR)


board_deselect_all(player.board, player)


frame
────────────────────────────────────────────────────────────────────────

player_update(player, ∅, true)

const time_left = end_time - utc_now()    

if time_left ≤ 15/60:
    // Make a few frames black at the end so that a player can
    // still trace a little further but can't see. This makes
    // it feel like they squeezed in one more word and weren't
    // "robbed" if in the process of selecting. Without this
    // it always feels like "I was just about to finish my word"
    draw_corner_rect(xy(0, 0), SCREEN_SIZE, #000, ∅, 100)
    
    
if time_left ≤ 0 or DEBUG_INTERMISSION:
    play_sound(times_up_sound)
    
    board_deselect_all(player.board, player)
    sort(player.history.list, "points", true)
    // Reset the scroll position because layout differs
    // from the main game during intermission
    player.history.scroll = 0
    
    if game_type == SOLO:
        set_mode(SoloIntermission) because "SOLO and timer"
    else:
        set_mode(GatherGlobalResults) because "GLOBAL and timer"

// Hint for compiler:
// push_mode(Rotate) because "Rotate button"
            