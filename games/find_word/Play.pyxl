Play
════════════════════════════════════════════════════════════════════════


enter
────────────────────────────────────────────────────────────────────────
assert(not in_waiting_room)

// Repeat Title global setup in case we're debugging
// and started in this mode
set_hooks()
set_random_seed()

player_reset(player, game_type)

if DEBUG_HISTORY or DEBUG_GAME_OVER:
    for i < 60: player_add_to_history(player, "FOOBAR", 3 + i)

// Compute end_time
if game_type == SOLO:
    end_time = utc_time + SOLO_GAME_TIME
else:
    assert(game_type == GLOBAL)
    
    end_time = prev_global_game_utc_start_time() + GLOBAL_GAME_TIME

    assert(end_time > utc_time + GLOBAL_JOIN_MIN_REMAINING_TIME - 1,
        "The game should not end so soon")

set_background(
    if game_type == GLOBAL then GLOBAL_BACKGROUND_COLOR
    else SOLO_BACKGROUND_COLOR)


frame
────────────────────────────────────────────────────────────────────────

player_update(player, ∅, true)

if utc_now() ≥ end_time or DEBUG_GAME_OVER:
    set_mode(GameOver) because "Timer"
    todo("Play timer sound")

// Hint for compiler:
// push_mode(Rotate) because "Rotate button"
            