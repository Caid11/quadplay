WaitingRoom
════════════════════════════════════════════════════════════════════════

enter
────────────────────────────────────────────────────────────────────────
assert(game_type == GLOBAL)
in_waiting_room = true

// End right when the next game starts so that this player can join
end_time = prev_global_game_utc_start_time() + GLOBAL_PERIOD

assert(end_time - utc_time - 2 < GLOBAL_INTERMISSION_TIME + GLOBAL_JOIN_MIN_REMAINING_TIME, 
    "WaitingRoom time should not exceed intermission plus join min time")

set_background(WAITING_ROOM_BACKGROUND_COLOR)
set_post_effects({color: #CFC, color_blend: "multiply"})
    

frame
────────────────────────────────────────────────────────────────────────

player_update(player, ∅, true)

if utc_time ≥ end_time or DEBUG_INTERMISSION:
    in_waiting_room = false
    reset_post_effects()
    set_mode(GenerateBoard) because "Global game start"

// Hint for compiler:
// push_mode(Rotate) because "Rotate button"