GameOver
════════════════════════════════════════════════════════════════════════

let unfound_word

def points_order(A, B):
    return B.points - A.points
    
    
def word_comparator(entry, word):
    return entry.word == word
    

def choose_unfound_word():
    for i < 30:
        unfound_word = random_value(player.board.word_list)
        if not sensitive[unfound_word] and not contains(player.history.list, unfound_word, word_comparator):
            return
    
    unfound_word = ∅
    

enter
────────────────────────────────────────────────────────────────────────
board_deselect_all(player.board, player)
//debug_print(player.board.word_list)
sort(player.history.list, points_order)


frame
────────────────────────────────────────────────────────────────────────

if mode_frames mod 480 == 120:
    choose_unfound_word()
    
const left = if landscape() then ⅓ else ¼
const right = 100% - left

// Score
draw_text({
    font: score_font,
    text: format_number(player.score, "commas") + " pts",
    outline: #000,
    shadow: #000,
    pos: xy(left * SCREEN_SIZE.x, 18),
    color: #FFF})

draw_text({
    font: history_font,
    text: "" + size(player.history.list) + "/" + player.board.word_count + " words found",
    pos: xy(left * SCREEN_SIZE.x, 32),
    shadow: #000,
    color: #FFF})
    

if unfound_word:
    draw_text({
        font: history_font,
        text: "Try \"" + unfound_word + "\"",
        pos: xy(left *  SCREEN_SIZE.x, 42),
        shadow: #000,
        color: #FFF})
    
todo("Global sync game start")
todo("Show some words not found")

// Board
for y < ROWS:
    for x < COLS:
        const pos = xy(right * SCREEN_SIZE.x, 30) + 12 xy(x - 1.5, y - 1.5)
        draw_disk(pos, 5, #FFF)
        
        const letter = player.board.tile[x][y].letter
        draw_text({
            pos: pos,
            font: history_font,
            color: #000,
            text: if letter == "Q" then "Qu" else letter})


// History
history_draw(player.history, xy(4, 60), SCREEN_SIZE.y - 30)

// Countdown
draw_text({
    font: score_font,
    text: format_number(max(INTERMISSION_MINUTES * 60 - mode_frames / 60, 0), "timer") + " until next game…",
    pos: xy(½ SCREEN_SIZE.x, SCREEN_SIZE.y - 10),
    color: #FFF})

if mode_frames ≥ 3600 INTERMISSION_MINUTES:
    set_mode(Play) because "Timer"

